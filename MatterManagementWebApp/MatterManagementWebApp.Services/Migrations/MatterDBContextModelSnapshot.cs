// <auto-generated />
using System;
using MatterManagementWebApp.Services.Data.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MatterManagementWebApp.Services.Migrations
{
    [DbContext(typeof(MatterDBContext))]
    partial class MatterDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Attorney", b =>
                {
                    b.Property<int>("AttorneyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttorneyId"));

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("HourlyRate")
                        .HasColumnType("int");

                    b.Property<int>("JurisdictionId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttorneyId");

                    b.HasIndex("JurisdictionId");

                    b.ToTable("Attorney");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<int?>("Age")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<int>("AttorneyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HoursWorked")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MatterId")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("AttorneyId");

                    b.HasIndex("MatterId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Jurisdiction", b =>
                {
                    b.Property<int>("JurisdictionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JurisdictionId"));

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("JurisdictionId");

                    b.ToTable("Jurisdiction");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Matter", b =>
                {
                    b.Property<int>("MatterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatterId"));

                    b.Property<int>("BillingAttorneyId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("JurisdictionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpenDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("ResponsibleAttorneyId")
                        .HasColumnType("int");

                    b.HasKey("MatterId");

                    b.HasIndex("BillingAttorneyId");

                    b.HasIndex("ClientId");

                    b.HasIndex("JurisdictionId");

                    b.HasIndex("ResponsibleAttorneyId");

                    b.ToTable("Matter");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Attorney", b =>
                {
                    b.HasOne("MatterManagementWebApp.Services.Models.Entities.Jurisdiction", "Jurisdiction")
                        .WithMany("Attorneys")
                        .HasForeignKey("JurisdictionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Jurisdiction");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Invoice", b =>
                {
                    b.HasOne("MatterManagementWebApp.Services.Models.Entities.Attorney", "Attorney")
                        .WithMany()
                        .HasForeignKey("AttorneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatterManagementWebApp.Services.Models.Entities.Matter", "Matter")
                        .WithMany("Invoices")
                        .HasForeignKey("MatterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attorney");

                    b.Navigation("Matter");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Matter", b =>
                {
                    b.HasOne("MatterManagementWebApp.Services.Models.Entities.Attorney", "BillingAttorney")
                        .WithMany()
                        .HasForeignKey("BillingAttorneyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MatterManagementWebApp.Services.Models.Entities.Client", "Client")
                        .WithMany("Matters")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MatterManagementWebApp.Services.Models.Entities.Jurisdiction", "Jurisdiction")
                        .WithMany("Matters")
                        .HasForeignKey("JurisdictionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MatterManagementWebApp.Services.Models.Entities.Attorney", "ResponsibleAttorney")
                        .WithMany()
                        .HasForeignKey("ResponsibleAttorneyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BillingAttorney");

                    b.Navigation("Client");

                    b.Navigation("Jurisdiction");

                    b.Navigation("ResponsibleAttorney");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Client", b =>
                {
                    b.Navigation("Matters");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Jurisdiction", b =>
                {
                    b.Navigation("Attorneys");

                    b.Navigation("Matters");
                });

            modelBuilder.Entity("MatterManagementWebApp.Services.Models.Entities.Matter", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
